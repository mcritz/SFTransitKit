name: CI (Swift 6.1 • macOS • Linux • Android)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SWIFT_VERSION: "6.1.2"

  # Android Swift SDK bundle (snapshot 6.2, works with 6.1 host toolchain)
  ANDROID_SDK_BUNDLE_URL: "https://github.com/swift-android-sdk/swift-android-sdk/releases/download/6.2-DEVELOPMENT-SNAPSHOT-2025-08-30-a/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-08-30-a-android-0.1.artifactbundle.tar.gz"
  ANDROID_SDK_BUNDLE_SHA256: "ac51c77a60f85a00ef0e3ab2a6f43449ce371dfa29b7415fa4d24e35d9f4e7ef"

  # ID inside the artifactbundle
  ANDROID_SWIFT_SDK_ID: "aarch64-unknown-linux-android24"
  ANDROID_API_LEVEL: "24"

jobs:
  linux:
    name: Linux • Swift (swiftly)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      # Install swiftly from Swift.org (Linux official method)
      - name: Install swiftly
        run: |
          set -euxo pipefail
          curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
          tar zxf swiftly-$(uname -m).tar.gz
          ./swiftly init --quiet-shell-followup
          echo "SWIFTLY_HOME=${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}" >> $GITHUB_ENV
          echo "PATH=${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/bin:$PATH" >> $GITHUB_ENV

      - name: Install Swift
        run: |
          swiftly install "$SWIFT_VERSION"
          swiftly use "$SWIFT_VERSION"
          swift --version

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/.swiftpm
          key: spm-${{ runner.os }}-${{ env.SWIFT_VERSION }}-${{ hashFiles('**/Package.resolved') }}

      - name: Build
        run: swift build -v

      - name: Test
        run: swift test -v

  macos:
    name: macOS • Swift ${{ matrix.swift-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macos-14, macos-15]
        swift-version: ["6.1.2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Verify Swift version
        run: |
          swift --version
          echo "Swift version: $(swift --version)"

      - name: Cache SwiftPM dependencies
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Developer/Xcode/DerivedData
            ~/.swiftpm/cache
          key: spm-${{ matrix.os }}-swift-${{ matrix.swift-version }}-${{ hashFiles('**/Package.resolved', '**/Package.swift') }}
          restore-keys: |
            spm-${{ matrix.os }}-swift-${{ matrix.swift-version }}-
            spm-${{ matrix.os }}-

      - name: Resolve dependencies
        run: swift package resolve

      - name: Build package
        run: swift build -v --configuration release

      - name: Run tests
        run: swift test -v --configuration debug --parallel
    
  android:
    name: Android (Swift for Android SDK)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      # Download and extract the Android Swift SDK bundle
      - name: Download Android Swift SDK
        run: |
          set -euxo pipefail
          curl -L -o android-swift-sdk.tar.gz "$ANDROID_SDK_BUNDLE_URL"
          echo "$ANDROID_SDK_BUNDLE_SHA256  android-swift-sdk.tar.gz" | sha256sum -c -
          mkdir android-swift-sdk
          tar -xf android-swift-sdk.tar.gz -C android-swift-sdk --strip-components=1

      # Export SDK path for subsequent steps
      - name: Set Android Swift SDK environment
        run: |
          echo "SWIFT_ANDROID_SDK_PATH=$PWD/android-swift-sdk" >> $GITHUB_ENV
          echo "$PWD/android-swift-sdk/bin" >> $GITHUB_PATH

      # Install host Swift (for cross-compilation)
      - name: Install Swift (host)
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.2"

      - name: Cache SwiftPM (Android cross)
        uses: actions/cache@v4
        with:
          path: .build-android
          key: spm-android-${{ env.SWIFT_VERSION }}-${{ hashFiles('**/Package.resolved') }}

      - name: Resolve dependencies
        run: swift package resolve

      # Build for Android using SwiftPM's new --android flag (see Swift forums guide)
      - name: Build for Android
        run: |
          swift build -v \
            --build-path .build-android \
            --triple ${{ env.ANDROID_SWIFT_SDK_ID }} \
            --sdk ${{ env.SWIFT_ANDROID_SDK_PATH }}

      # Build tests for Android (compile check, not run)
      - name: Build tests for Android (compile check)
        run: |
          swift build -v \
            --build-path .build-android \
            --triple ${{ env.ANDROID_SWIFT_SDK_ID }} \
            --sdk ${{ env.SWIFT_ANDROID_SDK_PATH }} \
            --build-tests
